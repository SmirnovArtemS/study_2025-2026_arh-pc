---
## Author
author:
  name: Смирнов Артём Сергеевич
  degrees: DSc
  orcid: 0000-0002-0877-7063
  email: 1032252364@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: "Отчет по ло лабораторной работе №2"
subtitle: "Дисциплина: Архитектура компьютеров. Группа: НПИбд-02-25"
license: "CC BY"
---

# Цель работы

Ознакомиться с системой контроля версий Git, настроить его, завести репозиторий на сайте github и скинуть в него свои отчеты по лабораторным работам.

# Задание

1. Создайте отчет по выполнению лабораторной работы в
соответствующем каталоге рабочего пространства
(labs/lab02/report).
2. Скопируйте отчеты по выполнению предыдущих лабораторных работ в
соответствующие каталоги созданного рабочего пространства.
3. Загрузите файлы на github.

# Выполнение лабораторной работы

## Настройка GitHub


URL https://github.com/SmirnovArtemS/study_2025-2026_arh-pc.git

## Базовая настройка git

Сделаем предварительную конфигурацию git.

![Настройка git](image/1.png){ #fig:fig1
width=90% }

## Создание SSH ключа

Для последующей идентификации пользователя на сервере репозиториев
необходимо сгенерировать пару ключей (приватный и открытый). Ключ сохраниться в каталог ~/.ssh/.

![Cоздания приватного ключа и запись его в каталог ~/.ssh/.](image/2.png){ #fig:fig2 width=90% }

Далее необходимо загрузить сгенерированный открытый ключ. Для этого зайти на
сайт http://github.org/ под своей учётной записью и перейти в меню Setting . После
этого выбрать в боковом меню SSH and GPG keys и нажать кнопку New SSH key .
Скопировав из локальной консоли ключ в буфер обмена
Вставляем ключ в появившееся на сайте поле и указываем для ключа имя (Title).

![Копируем ключ из локальной сети в буфер обмен](image/3.png){ #fig:fig2 width=90% }
![Создание открытого ключа](image/4.png){ #fig:fig2 width=90% }
![Проверяем добавление ключа](image/5.png){ #fig:fig2 width=90% }

## Создание рабочего пространства и репозитория курса на основе шаблона.

Откройте терминал и создайте каталог для предмета «Архитектура компьютера»

![Создание рабочего пространства](image/6.png){ #fig:fig2 width=90% }

## Создание репозитория курса на основе шаблона.

Перейдите на станицу репозитория с шаблоном курса https://github.com/yamadharma/course-directory-student-template. Далее выберите Use this template. В открывшемся окне задайте имя репозитория (Repository name) study_2025–2026_arhpc и создайте репозиторий (кнопка Create repository from template).

![Создаем репозиторий по шаблону и называем его “study_2025–2026_arh-pc”](image/7.png){ #fig:fig2 width=90% }

Откройте терминал и перейдите в каталог курса

![Переходим в каталог курса](image/8.png){ #fig:fig2 width=90% }

Клонируйте созданный репозиторий с GitHub

![Клонируем созданный репозиторий](image/9.png){ #fig:fig2 width=90% }

## Настройка каталога курса

Перейдите в каталог курса: cd ~/work/study/2023-2024/»Архитектура компьютера»/arch-pc

![Переходим в каталог курса](image/10.png){ #fig:fig2 width=90% }

Создайте необходимые каталоги

![Создаем необходимые файлы](image/11.png){ #fig:fig2 width=90% }

Отправьте файлы на сервер

![](image/12.png){ #fig:fig2 width=90% }
![Отслеживаем файл, записываем изменения в клонированный репозиторий и отправляем данные в репозиторий](image/13.png){ #fig:fig2 width=90% }

Проверьте правильность создания иерархии рабочего пространства в локальном репозитории и на странице github.

![Проверяем правильность выполнения команд в терминале](image/14.png){ #fig:fig2 width=90% }

![Проверяем правильность выполнения команд в github](image/15.png){ #fig:fig2 width=90% }

# Задания для самостоятельной работы 

1. Создайте отчет по выполнению лабораторной работы в
соответствующем каталоге рабочего пространства
(labs/lab02/report).

![Создание отчета](image/16.png){ #fig:fig2 width=90% }

![Проверка создания отчета](image/17.png){ #fig:fig2 width=90% }

2. Скопируйте отчеты по выполнению предыдущих лабораторных работ в
соответствующие каталоги созданного рабочего пространства.

![Копируем первый отчет в соответствующий каталог](image/18.png){ #fig:fig2 width=90% }

![Проверяем правильность выполнения команды](image/19.png){ #fig:fig2 width=90% }

# Выводы

Ознакомился с системой контроля версий Git, настроил его, завел
репозиторий на сайте github и скинул в него свои отчеты по
лабораторным работам.

# Список литературы{.unnumbered}

1.
GDB:
The
GNU
Project
https://www.gnu.org/software/gdb/.Debugger.—URL:
2.
GNU
Bash
Manual.
—
https://www.gnu.org/software/bash/manual/.2016.—URL:
3. Midnight Commander Development Center. — 2021. — URL:
https://midnight-commander.
org/.
4. NASM Assembly
https://asmtutor.com/.
Language
Tutorials.
—
2021.
—
URL:
5. Newham C. Learning the bash Shell: Unix Shell Programming. — O’Reilly
Media, 2005. —
354 с. — (In a Nutshell). — ISBN 0596009658. — URL:
http://www.amazon.com/Learningbash-Shell-Programming-
Nutshell/dp/0596009658.
6. Robbins A. Bash Pocket Reference. — O’Reilly Media, 2016. — 156 с. —
ISBN 978-1491941591.
7.
The
NASM
documentation.
https://www.nasm.us/docs.php.
—
2021.
—
URL:
8. Zarrelli G. Mastering Bash. — Packt Publishing, 2017. — 502 с. — ISBN
9781784396879.
9. Колдаев В. Д., Лупин С. А. Архитектура ЭВМ. — М. : Форум, 2018.10. Куляс О. Л., Никитин К. А. Курс программирования на
ASSEMBLER. — М. : Солон-Пресс, 2017.
11. Новожилов О. П. Архитектура ЭВМ и систем. — М. : Юрайт, 2016.
12. Расширенный ассемблер: NASM.
https://www.opennet.ru/docs/RUS/nasm/.
—
2021.
—
URL:
13. Робачевский А., Немнюгин С., Стесик О. Операционная система
UNIX. — 2-е изд. — БХВПетербург, 2010. — 656 с. — ISBN 978-5-
94157-538-1.
14. Столяров А. Программирование на языке ассемблера NASM для ОС
Unix. — 2-е изд. —
М.
:
МАКС
Пресс,
2011.
—
URL:
http://www.stolyarov.info/books/asm_unix.
15. Таненбаум Э. Архитектура компьютера. — 6-е изд. — СПб. : Питер,
2013. — 874 с. —
(Классика Computer Science).
16. Таненбаум Э., Бос Х. Современные операционные системы. — 4-е
изд. — СПб. : Питер,
2015. — 1120 с. — (Классика Computer Science).

::: {#refs}
:::
